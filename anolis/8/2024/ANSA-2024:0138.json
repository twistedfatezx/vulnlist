{
  "ID": "oval:cn.openanolis:def:20240138",
  "Version": "1",
  "Class": "patch",
  "Metadata": {
    "Title": "ANSA-2024:0138: container-tools:an8 security and bug fix update (Moderate)",
    "Affected": {
      "Family": "unix",
      "Platform": [
        "Anolis OS 8"
      ]
    },
    "References": [
      {
        "RefID": "ANSA-2024:0138",
        "RefURL": "https://anas.openanolis.cn/errata/detail/ANSA-2024:0138",
        "Source": "ANSA"
      }
    ],
    "Description": "Package updates are available for Anolis 8 that fix the following vulnerabilities:\n\nCVE-2022-3064:\nParsing malicious or large YAML documents can consume excessive amounts of CPU or memory.\n\nCVE-2022-41723:\nA maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.\n\nCVE-2022-41724:\nLarge handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth \u003e= RequestClientCert).\n\nCVE-2022-41725:\nA denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.\n\nCVE-2023-24534:\nHTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.\n\nCVE-2023-24536:\nMultipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.\n\nCVE-2023-24537:\nCalling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.\n\nCVE-2023-24538:\nTemplates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.\n\nCVE-2023-24539:\nAngle brackets (\u003c\u003e) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.\n\nCVE-2023-24540:\nNot all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.\n\nCVE-2023-25173:\ncontainerd is an open source container runtime. A bug was found in containerd prior to versions 1.6.18 and 1.5.18 where supplementary groups are not set up properly inside a container. If an attacker has direct access to a container and manipulates their supplementary group access, they may be able to use supplementary group access to bypass primary group restrictions in some cases, potentially gaining access to sensitive information or gaining the ability to execute code in that container. Downstream applications that use the containerd client library may be affected as well.\nThis bug has been fixed in containerd v1.6.18 and v.1.5.18. Users should update to these versions and recreate containers to resolve this issue. Users who rely on a downstream application that uses containerd's client library should check that application for a separate advisory and instructions. As a workaround, ensure that the `\"USER $USERNAME\"` Dockerfile instruction is not used. Instead, set the container entrypoint to a value similar to `ENTRYPOINT [\"su\", \"-\", \"user\"]` to allow `su` to properly set up supplementary groups.\n\nCVE-2023-25809:\nrunc is a CLI tool for spawning and running containers according to the OCI specification. In affected versions it was found that rootless runc makes `/sys/fs/cgroup` writable in following conditons: 1. when runc is executed inside the user namespace, and the `config.json` does not specify the cgroup namespace to be unshared (e.g.., `(docker|podman|nerdctl) run --cgroupns=host`, with Rootless Docker/Podman/nerdctl) or 2. when runc is executed outside the user namespace, and `/sys` is mounted with `rbind, ro` (e.g., `runc spec --rootless`; this condition is very rare). A container may gain the write access to user-owned cgroup hierarchy `/sys/fs/cgroup/user.slice/...` on the host . Other users's cgroup hierarchies are not affected. Users are advised to upgrade to version 1.1.5. Users unable to upgrade may unshare the cgroup namespace (`(docker|podman|nerdctl) run --cgroupns=private)`. This is the default behavior of Docker/Podman/nerdctl on cgroup v2 hosts. or add `/sys/fs/cgroup` to `maskedPaths`.\n\nCVE-2023-27561:\nrunc through 1.1.4 has Incorrect Access Control leading to Escalation of Privileges, related to libcontainer/rootfs_linux.go. To exploit this, an attacker must be able to spawn two containers with custom volume-mount configurations, and be able to run custom images. NOTE: this issue exists because of a CVE-2019-19921 regression.\n\nCVE-2023-28642:\nrunc is a CLI tool for spawning and running containers according to the OCI specification. It was found that AppArmor can be bypassed when `/proc` inside the container is symlinked with a specific mount configuration. This issue has been fixed in runc version 1.1.5, by prohibiting symlinked `/proc`. See PR #3785 for details. users are advised to upgrade. Users unable to upgrade should avoid using an untrusted container image.\n\nCVE-2023-29400:\nTemplates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.\n\nCVE-2023-29406:\nThe HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.\n\nCVE-2023-3978:\nText nodes not in the HTML namespace are incorrectly literally rendered, causing text which should be escaped to not be. This could lead to an XSS attack.",
    "Advisory": {
      "Severity": "Moderate",
      "Issued": {
        "Date": "2024-04-07"
      },
      "Updated": {
        "Date": "2024-04-08"
      },
      "Cves": [
        {
          "ID": "CVE-2022-3064",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2022-3064",
          "CWE": "CWE-400",
          "Public": "20221227"
        },
        {
          "ID": "CVE-2022-41723",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2022-41723",
          "CWE": "CWE-400",
          "Public": "20230217"
        },
        {
          "ID": "CVE-2022-41724",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2022-41724",
          "CWE": "CWE-400",
          "Public": "20230301"
        },
        {
          "ID": "CVE-2022-41725",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2022-41725",
          "CWE": "CWE-400",
          "Public": "20230301"
        },
        {
          "ID": "CVE-2023-24534",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24534",
          "CWE": "CWE-400",
          "Public": "20230406"
        },
        {
          "ID": "CVE-2023-24536",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24536",
          "CWE": "CWE-400",
          "Public": "20230406"
        },
        {
          "ID": "CVE-2023-24537",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24537",
          "CWE": "CWE-835",
          "Public": "20230406"
        },
        {
          "ID": "CVE-2023-24538",
          "CVSS3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "Impact": "Critical",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24538",
          "CWE": "CWE-94",
          "Public": "20230406"
        },
        {
          "ID": "CVE-2023-24539",
          "CVSS3": "7.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24539",
          "CWE": "CWE-176",
          "Public": "20230511"
        },
        {
          "ID": "CVE-2023-24540",
          "CVSS3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "Impact": "Critical",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-24540",
          "CWE": "CWE-176",
          "Public": "20230512"
        },
        {
          "ID": "CVE-2023-25173",
          "CVSS3": "7.3/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-25173",
          "CWE": "CWE-842",
          "Public": "20230215"
        },
        {
          "ID": "CVE-2023-25809",
          "CVSS3": "2.5/CVSS:3.1/AV:L/AC:H/PR:H/UI:N/S:C/C:N/I:N/A:L",
          "Impact": "Low",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-25809",
          "CWE": "CWE-276",
          "Public": "20230329"
        },
        {
          "ID": "CVE-2023-27561",
          "CVSS3": "7.0/CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-27561",
          "CWE": "CWE-41",
          "Public": "20230220"
        },
        {
          "ID": "CVE-2023-28642",
          "CVSS3": "7.8/CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-28642",
          "CWE": "CWE-305",
          "Public": "20230330"
        },
        {
          "ID": "CVE-2023-29400",
          "CVSS3": "7.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-29400",
          "CWE": "CWE-176",
          "Public": "20230511"
        },
        {
          "ID": "CVE-2023-29406",
          "CVSS3": "6.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N",
          "Impact": "Moderate",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-29406",
          "CWE": "CWE-113",
          "Public": "20230711"
        },
        {
          "ID": "CVE-2023-3978",
          "CVSS3": "6.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "Impact": "Moderate",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2023-3978",
          "CWE": "CWE-79",
          "Public": "20230802"
        }
      ],
      "AffectedCpeList": [
        "cpe:2.3:o:openanolis:anolis_os:8:*:*:*:*:*:*:* "
      ]
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": null,
        "Criterions": [
          {
            "Comment": "aardvark-dns is earlier than 2:dns-1.7.0-2.0.1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138001"
          },
          {
            "Comment": "buildah is earlier than 1:1.31.3-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138002"
          },
          {
            "Comment": "buildah-tests is earlier than 1:tests-1.31.3-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138003"
          },
          {
            "Comment": "conmon is earlier than 3:2.1.8-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138004"
          },
          {
            "Comment": "containernetworking-plugins is earlier than 1:plugins-1.3.0-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138005"
          },
          {
            "Comment": "containers-common is earlier than 2:common-1-71.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138006"
          },
          {
            "Comment": "crit is earlier than 0:3.18-5.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138007"
          },
          {
            "Comment": "criu is earlier than 0:3.18-5.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138008"
          },
          {
            "Comment": "criu-devel is earlier than 0:devel-3.18-5.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138009"
          },
          {
            "Comment": "criu-libs is earlier than 0:libs-3.18-5.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138010"
          },
          {
            "Comment": "crun is earlier than 0:1.8.7-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138011"
          },
          {
            "Comment": "fuse-overlayfs is earlier than 0:overlayfs-1.12-1.0.1.module+an8.9.0+11170+5c4084bd",
            "TestRef": "oval:cn.openanolis:tst:20240138012"
          },
          {
            "Comment": "libslirp is earlier than 0:4.4.0-1.module+an8.7.0+11008+881d4b66",
            "TestRef": "oval:cn.openanolis:tst:20240138013"
          },
          {
            "Comment": "libslirp-devel is earlier than 0:devel-4.4.0-1.module+an8.7.0+11008+881d4b66",
            "TestRef": "oval:cn.openanolis:tst:20240138014"
          },
          {
            "Comment": "netavark is earlier than 2:1.7.0-2.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138015"
          },
          {
            "Comment": "oci-seccomp-bpf-hook is earlier than 0:seccomp-bpf-hook-1.2.9-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138016"
          },
          {
            "Comment": "podman is earlier than 3:4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138017"
          },
          {
            "Comment": "podman-catatonit is earlier than 3:catatonit-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138018"
          },
          {
            "Comment": "podman-gvproxy is earlier than 3:gvproxy-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138019"
          },
          {
            "Comment": "podman-plugins is earlier than 3:plugins-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138020"
          },
          {
            "Comment": "podman-remote is earlier than 3:remote-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138021"
          },
          {
            "Comment": "podman-tests is earlier than 3:tests-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138022"
          },
          {
            "Comment": "python3-criu is earlier than 0:criu-3.18-5.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138023"
          },
          {
            "Comment": "runc is earlier than 1:1.1.12-1.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138024"
          },
          {
            "Comment": "skopeo is earlier than 2:1.13.3-3.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138025"
          },
          {
            "Comment": "skopeo-tests is earlier than 2:tests-1.13.3-3.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138026"
          },
          {
            "Comment": "slirp4netns is earlier than 0:1.2.1-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138027"
          },
          {
            "Comment": "toolbox is earlier than 0:0.0.99.4-5.0.1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138028"
          },
          {
            "Comment": "toolbox-tests is earlier than 0:tests-0.0.99.4-5.0.1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138029"
          },
          {
            "Comment": "cockpit-podman is earlier than 0:podman-75-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138030"
          },
          {
            "Comment": "container-selinux is earlier than 2:selinux-2.221.0-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138031"
          },
          {
            "Comment": "python-podman is earlier than 0:podman-4.6.0-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138032"
          },
          {
            "Comment": "udica is earlier than 0:0.2.6-20.module+an8.8.0+11084+6fc06be3",
            "TestRef": "oval:cn.openanolis:tst:20240138033"
          },
          {
            "Comment": "podman-docker is earlier than 3:docker-4.6.1-8.0.1.module+an8.9.0+11183+7cdff43b",
            "TestRef": "oval:cn.openanolis:tst:20240138034"
          },
          {
            "Comment": "python3-podman is earlier than 0:podman-4.6.0-1.module+an8.9.0+11160+0053db51",
            "TestRef": "oval:cn.openanolis:tst:20240138035"
          }
        ]
      }
    ],
    "Criterions": [
      {
        "Comment": "Anolis OS 8 is installed",
        "TestRef": "oval:cn.openanolis:tst:1"
      }
    ]
  }
}