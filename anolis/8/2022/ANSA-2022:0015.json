{
  "ID": "oval:cn.openanolis:def:20220015",
  "Version": "1",
  "Class": "patch",
  "Metadata": {
    "Title": "ANSA-2022:0015: nodejs:14 security, bug fix, and enhancement update (Moderate)",
    "Affected": {
      "Family": "unix",
      "Platform": [
        "Anolis OS 8"
      ]
    },
    "References": [
      {
        "RefID": "ANSA-2022:0015",
        "RefURL": "https://anas.openanolis.cn/errata/detail/ANSA-2022:0015",
        "Source": "ANSA"
      }
    ],
    "Description": "Package updates are available for Anolis 8 that fix the following vulnerabilities:\n\nCVE-2020-28469:\nThis affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.\n\nCVE-2020-7788:\nThis affects the package ini before 1.3.6. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\nCVE-2021-22959:\nThe parser in accepts requests with a space (SP) right after the header name before the colon. This can lead to HTTP Request Smuggling (HRS) in llhttp \u0026lt; v2.1.4 and \u0026lt; v6.0.6.\n\nCVE-2021-22960:\nThe parse function in llhttp \u0026lt; 2.1.4 and \u0026lt; 6.0.6. ignores chunk extensions when parsing the body of chunked requests. This leads to HTTP Request Smuggling (HRS) under certain conditions.\n\nCVE-2021-33502:\nThe normalize-url package before 4.5.1, 5.x before 5.3.1, and 6.x before 6.0.1 for Node.js has a ReDoS (regular expression denial of service) issue because it has exponential performance for data: URLs.\n\nCVE-2021-37701:\nThe npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.\n\nCVE-2021-37712:\nThe npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.\n\nCVE-2021-3807:\nansi-regex is vulnerable to Inefficient Regular Expression Complexity\n\nCVE-2021-3918:\njson-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
    "Advisory": {
      "Severity": "Moderate",
      "Issued": {
        "Date": "2022-02-18"
      },
      "Updated": {
        "Date": "2022-10-10"
      },
      "Cves": [
        {
          "ID": "CVE-2020-28469",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2020-28469",
          "CWE": "CWE-400",
          "Public": "20210112"
        },
        {
          "ID": "CVE-2020-7788",
          "CVSS3": "7.3/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2020-7788",
          "CWE": "CWE-400",
          "Public": "20201208"
        },
        {
          "ID": "CVE-2021-22959",
          "CVSS3": "6.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "Impact": "Moderate",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-22959",
          "CWE": "CWE-444",
          "Public": "20220218"
        },
        {
          "ID": "CVE-2021-22960",
          "CVSS3": "6.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
          "Impact": "Moderate",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-22960",
          "CWE": "CWE-444",
          "Public": "20220218"
        },
        {
          "ID": "CVE-2021-33502",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-33502",
          "CWE": "CWE-400",
          "Public": "20210521"
        },
        {
          "ID": "CVE-2021-37701",
          "CVSS3": "8.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-37701",
          "CWE": "CWE-59-\u003eCWE-22",
          "Public": "20210831"
        },
        {
          "ID": "CVE-2021-37712",
          "CVSS3": "8.1/CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-37712",
          "CWE": "CWE-59-\u003eCWE-22",
          "Public": "20210831"
        },
        {
          "ID": "CVE-2021-3807",
          "CVSS3": "7.5/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
          "Impact": "Important",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-3807",
          "CWE": "CWE-400",
          "Public": "20210917"
        },
        {
          "ID": "CVE-2021-3918",
          "CVSS3": "9.8/CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
          "Impact": "Critical",
          "Href": "https://anas.openanolis.cn/cves/detail/CVE-2021-3918",
          "CWE": "CWE-915",
          "Public": "20220218"
        }
      ],
      "AffectedCpeList": [
        "cpe:2.3:o:openanolis:anolis_os:8:*:*:*:*:*:*:* "
      ]
    }
  },
  "Criteria": {
    "Operator": "AND",
    "Criterias": [
      {
        "Operator": "OR",
        "Criterias": null,
        "Criterions": [
          {
            "Comment": "nodejs is earlier than 1:14.18.2-2.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015001"
          },
          {
            "Comment": "nodejs-devel is earlier than 1:devel-14.18.2-2.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015002"
          },
          {
            "Comment": "nodejs-full-i18n is earlier than 1:full-i18n-14.18.2-2.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015003"
          },
          {
            "Comment": "npm is earlier than 1:6.14.15-1.14.18.2.2.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015004"
          },
          {
            "Comment": "nodejs-nodemon is earlier than 0:nodemon-2.0.15-1.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015005"
          },
          {
            "Comment": "nodejs-packaging is earlier than 0:packaging-23-3.module+an8.4.0+10218+45cb32ae",
            "TestRef": "oval:cn.openanolis:tst:20220015006"
          },
          {
            "Comment": "nodejs-docs is earlier than 1:docs-14.18.2-2.module+an8.5.0+10639+190f0e24",
            "TestRef": "oval:cn.openanolis:tst:20220015007"
          }
        ]
      }
    ],
    "Criterions": [
      {
        "Comment": "Anolis OS 8 is installed",
        "TestRef": "oval:cn.openanolis:tst:1"
      }
    ]
  }
}